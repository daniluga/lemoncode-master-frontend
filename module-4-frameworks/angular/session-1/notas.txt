npx -> ejecutar binarios dentro de npm
todos los componentes, directivas, etc.. van dentro de /app
binding -> enlazar propiedad del XXXComponent con atributo html asÃ­: [placeholder]="placeholder"
interpolaciÃ³n de atributo -> poner el atributo entre [ ]

----
ng generate component<dÃ³nde dentro de /app + /nombre_componente> 
ng g c <dÃ³nde dentro de /app + /nombre_componente>



---------------------
Observer: 
- Es el suscriptor que "escucha" los valores emitidos por el Observable.

Observable: 
- Es la fuente de datos que emite valores con el tiempo
- No emiten hasta que no hay suscriptor (vagos, lazy)

Piensa en una cinta transportadora en una fÃ¡brica:

Observable â†’ Es la cinta transportadora que lleva productos (datos).
Observer â†’ Es el trabajador que estÃ¡ atento a los productos que pasan por la cinta y los recoge (suscripciÃ³n).
ğŸ”¹ Ejemplo:

Si la cinta envÃ­a cajas (datos), el trabajador las recibe y procesa.
Si la cinta se detiene (complete), el trabajador deja de recibir cajas.
Si la cinta se daÃ±a (error), el trabajador recibe una alerta y deja de trabajar.
ğŸ’¡ ConclusiÃ³n:

La cinta (Observable) sigue moviendo productos hasta que se para o falla.
El trabajador (Observer) solo ve los productos si estÃ¡ mirando (suscrito).
ğŸš€ Esto es RxJS en Angular!