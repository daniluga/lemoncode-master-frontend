{"mappings":"AAEA;;;;;AAIC;;;;AAMA;;;;;;AAMA;;;;AAaC;;;;;;AAKD;;;;;AAMD;;;;;AAME;;;;AAKF;EACE;;;;;AAKF;;;;;;AAKE;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAqBF;;;;;;;AAOA;;;;;AAhBE;;;;AA6BF;;;;;;AAKE;;;;;AASA;;;;AAKF;;;;;;AAKE;;;;;AAUE;;;;AAAA;;;;AAAA;;;;AAAA;;;;AAAA;;;;AAAA;;;;AAAA;;;;AAAA;;;;AAAA","sources":["styles.scss"],"sourcesContent":["@use \"base.scss\";\r\n\r\ndiv.container {\r\n  padding: 15px;\r\n  border: 1px solid black;\r\n\r\n p {\r\n   font-size: 125%;\r\n }\r\n\r\n /* El & hace referencia al padre, en este caso es \"div.container\". */\r\n /* El > hace referencia al 1er hijo directo \"p\" del padre */\r\n & > p {\r\n   font-style: italic;\r\n   font-weight: bold;\r\n   color: darkblue\r\n }\r\n\r\n p:hover {\r\n   background-color: pink;\r\n }\r\n}\r\n\r\n\r\np {\r\n  /* \r\n    Con el operador & vamos a indicar que debe \r\n    dirigirse al p√°rrafo padre.\r\n\r\n    \".variables-a &\" equivale a \".variables-a p\"\r\n  */\r\n  .variables-a & {\r\n  font-size: base.$font-base-size * 1.2; /* Ej: Operaciones */\r\n  background-color: base.$primary-color;\r\n  color: base.$text-color;\r\n}\r\n .variables-b & {\r\n   background-color: base.$secondary-color;\r\n   color: base.$text-color;\r\n }\r\n}\r\n\r\na {\r\n  font: {\r\n    size: base.$link-font-size;\r\n    weight: bold;\r\n  }\r\n  \r\n  &:hover {\r\n    color: base.$primary-color;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: base.$breakpoint-sm) {\r\n  p {\r\n    font-size: 30px;\r\n  }\r\n}\r\n\r\n.grid-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 200px);\r\n  grid-template-rows: repeat(2, 200px);\r\n\r\n  .item:nth-child(1) {\r\n    background-color: lighten($color: base.$grid-item-base-color, $amount: 50%);\r\n  }\r\n\r\n  .item:nth-child(2) {\r\n    background-color: darken($color: base.$grid-item-base-color, $amount: 50%);\r\n  }\r\n\r\n  .item:nth-child(3) {\r\n    background-color: saturate($color: base.$grid-item-base-color, $amount: 50%);\r\n  }\r\n\r\n  .item:nth-child(4) {\r\n    background-color: desaturate($color: base.$grid-item-base-color, $amount: 50%);\r\n  }\r\n\r\n  .item:nth-child(5) {\r\n    background-color: fade-in($color: base.$grid-item-base-color, $amount: 0.5);\r\n  }\r\n\r\n  .item:nth-child(6) {\r\n    background-color: fade-out($color: base.$grid-item-base-color, $amount: 0.5);\r\n  }\r\n\r\n  .item:nth-child(7) {\r\n    background-color: invert($color: base.$grid-item-base-color);\r\n  }\r\n\r\n  .item:nth-child(8) {\r\n    background-color: complement($color: base.$grid-item-base-color);\r\n  }\r\n}\r\n\r\n/*\r\n  Mixin es una forma de reutilizar estilos como si fueran \"funciones\".\r\n*/\r\n\r\n@mixin shadow-effect($shadow: 5px) {\r\n  box-shadow: 6px 10px $shadow rgba(0, 0, 0, 0.69);\r\n \r\n  &:hover {\r\n   box-shadow: 3px 5px $shadow rgba(0, 0, 0, 0.69);\r\n }\r\n}\r\n\r\n/*\r\n  Extend es una forma de reutilizar estilos.\r\n*/\r\n\r\n.button {\r\n  padding: 1rem;\r\n  border: 1px solid black;\r\n  border-radius: 0.5rem;\r\n  display: inline-block;\r\n}\r\n\r\n.primary-button {\r\n  @extend .button;\r\n  background-color: base.$primary-color;\r\n  @include shadow-effect(10px);\r\n}\r\n\r\n/*\r\n  Funciones\r\n*/\r\n@function filter-image($amount) {\r\n  @return brightness($amount * 2) sepia($amount);\r\n}\r\n\r\n.images-container-1 {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 200px);\r\n  grid-template-rows: repeat(3, 200px);\r\n\r\n  img {\r\n    width: 200px;\r\n    height: 200px;\r\n  }\r\n\r\n  /*\r\n    Aplicarle un brillo dependiendo de la posicion que ocupe la imagen\r\n  */\r\n\r\n  img:hover {\r\n    filter: filter-image(0.6)\r\n  }\r\n}\r\n\r\n.images-container-2 {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 200px);\r\n  grid-template-rows: repeat(3, 200px);\r\n\r\n  img {\r\n    width: 200px;\r\n    height: 200px;\r\n  }\r\n\r\n  /*\r\n    Aplicarle un brillo dependiendo de la posicion que ocupe la imagen\r\n  */\r\n  $i: 1;\r\n  @while $i <= 9 {\r\n    .item-#{$i}:hover {\r\n      filter: filter-image(0.6 * $i);\r\n    }\r\n    $i: $i + 1;\r\n  }\r\n}"],"names":[],"version":3,"file":"index.b8d1660c.css.map","sourceRoot":"/__parcel_source_root/"}