@use "_base.scss" as base;
@use "_mixins.scss" as mixins;

body {
  margin: base.$bodyMargin;
  font-family: base.$font;
  background-color: base.$fourthColor;
  height: base.$bodyHeight;
  display: grid;
  grid-template-rows: base.$bodyGridRows;
  grid-template-columns: base.$bodyGridCols;
  grid-template-areas: ("header" "navmain" "footer");

  header {
    grid-area: header;

    & .toolbar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: base.$padding;

      @media screen and (width <= base.$breakpointSM) {
        display: none;
      }
    }

    & .page-title {
      background-color: base.$primaryColor;
      padding: base.$pageTitlePadding;
      font-size: base.$fontSizeBig;
      text-align: left;

      @include mixins.colorAndWeightText();

      @media screen and (width <= base.$breakpointSM) {
        font-size: base.$fontSizeSmall;
        text-align: center;
      }
    }
  }

  .page-container {
    display: grid;
    grid-template-columns: base.$gridTemplateColumnsBig;
    grid-area: navmain;
    grid-template-areas: "nav main";

    @media screen and (width <= base.$breakpointSM) {
      grid-template-columns: base.$gridTemplateColumnsSmall;
      grid-template-areas:
        "nav"
        "main";
    }

    & nav {
      grid-area: nav;

      background-color: base.$secondaryColor;

      @media screen and (width <= base.$breakpointSM) {
        position: sticky;
        top: base.$defaultStickyTopPx;
      }

      & .menu-container {
        @media screen and (width > base.$breakpointSM) {
          position: sticky;
          top: base.$defaultStickyTopPx;
        }

        & .menu-title {
          display: flex;
          justify-content: center;
          align-content: start;
          padding: base.$padding;
          text-transform: uppercase;

          @include mixins.colorAndWeightText();

          @media screen and (width <= base.$breakpointSM) {
            display: none;
          }
        }

        & ul {
          list-style: none;
          box-sizing: border-box;
          margin: base.$ulMargin;
          padding: base.$ulPaddingBig;

          @media screen and (width <= base.$breakpointSM) {
            padding: base.$ulPaddingSmall;
            display: flex;
            justify-content: space-evenly;
          }

          & li {
            background-color: base.$tertiaryColor;
            border: 1px solid base.$primaryColor;
            padding: base.$padding;

            @media screen and (width <= base.$breakpointSM) {
              width: base.$liWidthSmall;
              text-align: center;
            }

            &:hover {
              background-color: base.$primaryColor;
              @include mixins.colorAndWeightText();
            }
          }
        }
      }
    }

    & main {
      grid-area: main;

      & .list {
        margin: base.$listMargin;
        display: flex;
        flex: 1;

        @media screen and (width <= base.$breakpointSM) {
          flex-direction: column;
          align-content: center;
          gap: base.$listGapSmall;
        }

        @media screen and (width > base.$breakpointSM) {
          flex-wrap: wrap;
          justify-content: space-evenly;
          align-content: space-evenly;
          gap: base.$listGapBig;
        }

        & .card {
          display: flex;
          flex-direction: column;
          justify-content: center;
          align-items: center;
          background-color: base.$whiteColor;
          gap: base.$cardGapBig;
          height: base.$cardHeightBig;

          @media screen and (width <= base.$breakpointSM) {
            border: 0px solid black;
          }

          @media screen and (width > base.$breakpointSM) {
            border: 1px solid black;
            border-radius: base.$cardBorderRadiusBig;
            width: base.$cardWidthBig;
            padding: base.$cardPaddingBig;
          }

          @include mixins.teachersHover(
            even,
            base.$evenTeachersColor,
            base.$primaryColor
          );

          @include mixins.teachersHover(
            odd,
            base.$oddTeachersColor,
            base.$primaryColor
          );

          & img {
            width: base.$imgWidth;
            height: base.$imgHeight;
            border-radius: base.$imgBorderRadius;
          }

          & .member-name {
            text-align: center;
          }
        }
      }
    }
  }

  & footer {
    grid-area: footer;
    background-color: base.$primaryColor;
    color: base.$whiteColor;
    padding: base.$padding;
  }
}
